---
export interface Props {
  contentBlocks: any[];
}

const components: Record<string, Function> = {};
const componentImports = import.meta.glob("../../components/**/*.{jsx,astro}", {
  eager: true,
});
Object.entries(componentImports).forEach(([path, obj]) => {
  const parts = path.replace("../../components/", "").split(".")[0].split("/");
  if (parts.length > 1 && parts[parts.length - 1] === parts[parts.length - 2]) {
    parts.pop();
  }
  const bookshopName = parts.join("/");
  components[bookshopName] = (obj as any).default;
});

const { contentBlocks } = Astro.props;
---

{
  contentBlocks.map((block, i) => {
    const Component = components[block._bookshop_name];
    return <Component {...block} key={i} />;
  })
}
