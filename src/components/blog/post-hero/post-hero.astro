---
import site from "data/site.json";
import type { ImageMetadata } from "astro";
import { Picture } from "astro:assets";

interface Props {
  frontmatter: {
    title: string;
    date: string | Date;
    author: string;
    image: string;
    image_alt: string;
    tags: Array<string>;
  };
  // bodyContent: string;
}
const { title, date, author, image, image_alt, tags } = Astro.props.frontmatter;

// const wordCount = bodyContent?.split(" ")?.length ?? 0;
const dateObj = new Date(date);
const authorWithFallback = author || site.default_author;

// let readingTime = "";
// const readingTimeInMins = Math.floor(wordCount / 183);
// if (readingTimeInMins === 0) {
//   readingTime = "Less than 1 minute";
// } else if (readingTimeInMins === 1) {
//   readingTime = "1 minute";
// } else {
//   `${readingTimeInMins} minutes`;
// }

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png,gif,svg,avif,webp}",
  { eager: true }
);
const imageSrc = images[image]?.default ?? image;
---

<div class="post-hero">
  <Picture
    class="blog-hero-image"
    src={imageSrc}
    alt={image_alt}
    widths={[600, 800, 1200, 1400]}
    sizes="(max-width: 1400px) 100vw, 1400px"
    loading="eager"
    formats={["avif", "webp"]}
  />
  <h1 id="blog-hero-text" class="blog-hero-title">{title}</h1>
  <div class="blog-hero-tags">
    {
      tags && (
        <div class="blog-summary-tags">
          {tags.map((tag: string) => {
            return (
              <a href={`/tags/${tag}/`}>
                <span>{tag.charAt(0).toUpperCase() + tag.slice(1)}</span>
              </a>
            );
          })}
        </div>
      )
    }
  </div>
  <div class="post-data">
    <p>{authorWithFallback}</p>
    <p>
      {
        dateObj.toLocaleDateString(undefined, {
          year: "numeric",
          month: "long",
          day: "numeric",
        })
      }
    </p>
    <!-- <div class="post-data-time">
      <p>{wordCount} words</p>
      <p>{readingTime}</p>
    </div> -->
  </div>
</div>
