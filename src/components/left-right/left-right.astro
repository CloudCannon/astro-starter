---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import LeftRightText from "../utility/left-right-text.astro";
import { findComponentPaddingMultiplier } from "src/assets/js/findComponentPaddingMultiplier";

interface Props {
  key: number;
  content_blocks_length: number;
  background_color: string;
  flipped: boolean;
  heading: {
    heading_text: string;
    color: string;
  };
  text: {
    text_content: string;
    color: string;
  };
  image: {
    image_path: string;
    alt_text: string;
  };
  button: {
    _bookshop_name: string;
    button_text: string;
    button_icon: string;
    button_link: string;
    background_color?: string;
    hover_brightness: number;
    text_color: string;
  };
}

const {
  key,
  content_blocks_length,
  background_color,
  flipped,
  heading,
  text,
  image,
  button,
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png,gif,svg,webp,avif}",
  { eager: true }
);
const imageSrc = images[image.image_path]?.default ?? image.image_path;

const componentBottomPaddingMultiplier = findComponentPaddingMultiplier(
  content_blocks_length,
  key
);
---

<div
  class="left-right"
  style={`background-color: ${background_color};`}
  aria-labelledby={`left-right-${key}-heading-text`}>
  {
    flipped ? (
      <div class="left-right__wrapper">
        <Image
          class="left-right-image-flipped"
          alt={image.alt_text}
          widths={[320, 500, 640]}
          sizes={`(max-width: 640px) 320px, (max-width: 960px) 500px, (max-width: 1280px) 640px`}
          src={imageSrc}
          loading="lazy"
        />
        <div class="left-right__text left-right__text-flipped">
          <LeftRightText
            heading={heading}
            button={button}
            text={text}
            key={key}
          />
        </div>
      </div>
    ) : (
      <div class="left-right__wrapper">
        <div class="left-right__text">
          <LeftRightText
            heading={heading}
            button={button}
            text={text}
            key={key}
          />
        </div>
        <Image
          alt={image.alt_text}
          widths={[320, 500, 640]}
          sizes={`(max-width: 640px) 320px, (max-width: 960px) 500px, (max-width: 1280px) 640px`}
          src={imageSrc}
          loading="lazy"
        />
      </div>
    )
  }
</div>

<style define:vars={{ componentBottomPaddingMultiplier }}>
  .left-right {
    display: flex;
    align-items: center;
    overflow: hidden;
  }

  .left-right__wrapper {
    width: 100%;
    max-width: var(--pageContainer);
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    gap: 2rem;
    padding-top: var(--sectionPaddingMobile);
    padding-bottom: calc(
      var(--sectionPaddingMobile) * var(--componentBottomPaddingMultiplier)
    );
    padding-inline: var(--pagePadding);
  }
  .left-right__wrapper img {
    width: 100%;
    max-width: 500px;
    margin-top: 32px;
  }

  .left-right-image-flipped {
    order: 2;
  }
  .left-right__text-flipped {
    order: 1;
  }
  @media only screen and (min-width: 768px) {
    .left-right__wrapper {
      flex-direction: row;
      gap: 64px;
      padding-top: var(--sectionPadding);
      padding-bottom: calc(
        var(--sectionPadding) * var(--componentBottomPaddingMultiplier)
      );
    }
    .left-right__wrapper img {
      width: 45%;
    }
    .left-right-image-flipped {
      order: 1;
    }

    .left-right__text-flipped {
      order: 2;
    }

    .left-right__text {
      width: 45%;
    }
  }
</style>
