---
import type { Page } from "astro";
import BlogList from "../../components/blog/list.astro";
import BlogPagination from "../../components/blog/pagination";
import type { Props as LayoutProps } from "../../layouts/Layout.astro";
import Layout from "../../layouts/Paginated.astro";
import { getCollection, getEntry, type CollectionEntry } from "astro:content";

type Props = {
  page: Page<CollectionEntry<"blog">>;
};

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const posts = await getCollection("blog");
  const page = await getEntry("pages", "blog");
  posts.sort((a, b) => {
    const aDate = new Date(a.data.post_hero.date);
    const bDate = new Date(b.data.post_hero.date);
    return bDate - aDate;
  });
  if (!page) {
    return;
  }
  return paginate(posts, {
    pageSize: "page_size" in page.data ? page.data.page_size : 6,
  });
}

const page = await getEntry("pages", "blog");
const frontmatter = page?.data as LayoutProps;
const pagination = Astro.props.page;
const { data: posts } = pagination;
---

<Layout frontmatter={frontmatter}>
  <div class="blog-index">
    <h1 class="blog-index-heading">
      {frontmatter.title}
    </h1>
    <div class="search-bar">
      <link href="/pagefind/pagefind-ui.css" rel="stylesheet" />
      <script is:inline src="/pagefind/pagefind-ui.js"></script>
      <div id="search"></div>
      <script is:inline>
        window.addEventListener("DOMContentLoaded", (event) => {
          new PagefindUI({ element: "#search", showSubResults: true });
        });
      </script>
    </div>
    <section>
      <BlogList posts={posts} />
      <BlogPagination pagination={pagination} />
    </section>
  </div>
</Layout>
