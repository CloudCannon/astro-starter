---
import type { Page } from "astro";
import BlogList from "../../components/blog/list.astro";
import BlogPagination from "../../components/blog/pagination";
import { type Props as LayoutProps } from "../../layouts/Layout.astro";
import Layout from "../../layouts/Paginated.astro";
import {
  getCollection,
  getEntryBySlug,
  type CollectionEntry,
} from "astro:content";

type Props = {
  page: Page<CollectionEntry<"blog">>;
};

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const posts = await getCollection("blog");
  const page = await getEntryBySlug("pages", "blog");
  // Filter out what is already displayed in featured stories
  const filteredPosts = posts.filter(
    (post) =>
      post.data.title !== page.data.featured_posts?.main_feature &&
      !page.data.featured_posts?.feature_list.includes(post.data.title)
  );
  return paginate(filteredPosts, {
    pageSize: "page_size" in page.data ? page.data.page_size : 6,
  });
}

const page = await getEntryBySlug("pages", "blog");
const frontmatter = page.data as LayoutProps;
const pagination = Astro.props.page;
const { data: posts } = pagination;
---

<Layout frontmatter={frontmatter}>
  <section class="blog-index mx-auto flex flex-col justify-center">
    <BlogList posts={posts} />
    <BlogPagination pagination={pagination} />
  </section>
</Layout>

<style>
  .blog-index {
    max-width: var(--pageContainer);
  }
</style>
